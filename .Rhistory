burn <- 1:burn_final
plot(sqrt(tb$s2[-burn]),type="l",main = "Plot of sigma")
matplot(sqrt(1/tb$v[seq(burn_final,nmcmc,100),]),type='l',
main = expression(paste("Plot of ",V[i])))
plot(X %*% beta, y, col = col, main="Predicted vs Actual Values")
abline(0,1,col="blue2",lwd=2.5)
plot(tb$nbasis,type="l")
roxygen2::roxygenize()
?tbass
roxygen2::roxygenize()
?tbass
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
#system.time(tbass(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
X <- tb$X
beta <- tb$b
burn_final <- nmcmc/10
burn <- 1:burn_final
plot(sqrt(tb$s2[-burn]),type="l",main = "Plot of sigma")
matplot(sqrt(1/tb$v[seq(burn_final,nmcmc,100),]),type='l',
main = expression(paste("Plot of ",V[i])))
plot(X %*% beta, y, col = col, main="Predicted vs Actual Values")
abline(0,1,col="blue2",lwd=2.5)
plot(tb$nbasis,type="l")
tb$count
tail(tb$s2)
devtools::install_github("aashen12/TBASS")
RcppArmadillo::RcppArmadillo.package.skeleton(name="ArmaTBASS",path="/Users/andyshen/Desktop/LANL",example_code = FALSE)
getdC <- function(){
.Call( "getdC", PACKAGE = "ArmaTBASS" )
}
View(getdC)
getdC()
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
remove.packages("TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
remove.packages("TBASS")
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
system.time(tbass(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
X <- tb$X
beta <- tb$b
burn_final <- nmcmc/10
burn <- 1:burn_final
plot(sqrt(tb$s2[-burn]),type="l",main = "Plot of sigma")
matplot(sqrt(1/tb$v[seq(burn_final,nmcmc,100),]),type='l',
main = expression(paste("Plot of ",V[i])))
plot(X %*% beta, y, col = col, main="Predicted vs Actual Values")
abline(0,1,col="blue2",lwd=2.5)
knitr::opts_chunk$set(echo = FALSE)
## Complete Outbreak Dataset
## Used to plot the true number of infections over time
rm(list=ls())
true <- read.csv("/Volumes/GoogleDrive/.shortcut-targets-by-id/15UGkfREtfqH3LdfHmCsSpFJ5SrTnSeyt/ebola/2020-05-04_ebola/2020-05-04_data.csv")
true
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
remove.packages("TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
TBASS::tbassC
library(Rcpp)
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
library(RcppArmadillo)
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
detach("package:RcppArmadillo", unload = TRUE)
library(RcppArmadillo)
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
which is what I got previously.
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
```{r}
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS",force=T)
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
remove.packages("TBASS")
detach("package:Rcpp", unload = TRUE)
detach("package:RcppArmadillo", unload = TRUE)
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
remove.packages("Rcpp")
remove.packages("RcppArmadillo")
devtools::install_github("aashen12/TBASS")
devtools::install_github("aashen12/TBASS",force = T)
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
remove.packages("TBASS")
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
devtools::install_github("aashen12/TBASS")
rm(list=ls())
#devtools::install_github("aashen12/TBASS")
# setwd("/Users/andyshen/Desktop/Git/TBASS/TBASS")
#Rcpp::sourceCpp("/Users/andyshen/Desktop/LANL/getdC.cpp")
library(TBASS)
f <- function(x){
10*sin(pi*x[,1]*x[,2])+20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma <- 1 # TRUE noise sd
n <- 1000 # number of observations
x <- matrix(runif(n*5),n,5) #10 variables, only first 5 matter
y <- rnorm(n,f(x),sigma)
ind<-sample(n,size=10)
y[ind]<-rnorm(5,f(x[ind,]),15)
col<-rep(1,n)
col[ind]<-2
set.seed(12)
nmcmc <- 20000
system.time(tb <- tbassC(x, y, nu = 10, nmcmc = nmcmc, verbose = F))
remove.packages("mnormt")
q()
